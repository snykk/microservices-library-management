syntax = "proto3";

package book_service;

option go_package = "/book_service";

import "validate/validate.proto";

service BookService {
  rpc CreateBook(CreateBookRequest) returns (CreateBookResponse);
  rpc GetBook(GetBookRequest) returns (GetBookResponse);
  rpc GetBooksByAuthor(GetBooksByAuthorRequest) returns (ListBooksResponse);
  rpc GetBooksByCategory(GetBooksByCategoryRequest) returns (ListBooksResponse);
  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse);
  rpc UpdateBook(UpdateBookRequest) returns (UpdateBookResponse);
  rpc DeleteBook(DeleteBookRequest) returns (DeleteBookResponse);
  rpc UpdateBookStock(UpdateBookStockRequest) returns (UpdateBookStockResponse);
  rpc IncrementBookStock(IncrementBookStockRequest) returns (IncrementBookStockResponse);
  rpc DecrementBookStock(DecrementBookStockRequest) returns (DecrementBookStockResponse);
}

message Book {
  string id = 1;
  string title = 2;
  string author_id = 3;
  string category_id = 4;
  int32 stock = 5;
  int64 createdAt = 6; // unix time
  int64 updatedAt = 7; // unit time
}

message CreateBookRequest {
  string title = 1 [(validate.rules).string.min_len = 1];
  string author_id = 2 [(validate.rules).string.min_len = 1];
  string category_id = 3 [(validate.rules).string.min_len = 1];
  int32 stock = 4 [(validate.rules).int32.gte = 0];  // Stock must be >= 0
}

message CreateBookResponse {
  Book book = 1;
}

message GetBookRequest {
  string id = 1 [(validate.rules).string.min_len = 1];  // ID must not be empty
}

message GetBookResponse {
  Book book = 1;
}

message GetBooksByAuthorRequest {
  string author_id = 1 [(validate.rules).string.min_len = 1];  // Author ID must not be empty
}

message GetBooksByCategoryRequest {
  string category_id = 1 [(validate.rules).string.min_len = 1];  // Category ID must not be empty
}

message ListBooksRequest {}

message ListBooksResponse {
  repeated Book books = 1;
}

message UpdateBookRequest {
  string id = 1 [(validate.rules).string.min_len = 1];  // ID must not be empty
  string title = 2 [(validate.rules).string.min_len = 1];
  string author_id = 3 [(validate.rules).string.min_len = 1];
  string category_id = 4 [(validate.rules).string.min_len = 1];
  int32 stock = 5 [(validate.rules).int32.gte = 0];  // Stock must be >= 0
}

message UpdateBookResponse {
  Book book = 1;
}

message UpdateBookStockRequest {
  string id = 1 [(validate.rules).string.min_len = 1];  // ID must not be empty
  int32 stock = 2 [(validate.rules).int32.gte = 0];  // Stock must be >= 0
}

message UpdateBookStockResponse {
  string message = 1;
}

message DeleteBookRequest {
  string id = 1 [(validate.rules).string.min_len = 1];  // ID must not be empty
}

message DeleteBookResponse {
  string message = 1;
}

message IncrementBookStockRequest {
  string id = 1 [(validate.rules).string.min_len = 1];  // ID must not be empty
}

message IncrementBookStockResponse {
  string message = 1;
}

message DecrementBookStockRequest {
  string id = 1 [(validate.rules).string.min_len = 1];  // ID must not be empty
}

message DecrementBookStockResponse {
  string message = 1;
}
