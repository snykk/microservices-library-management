syntax = "proto3";

package auth_service;

option go_package = "/auth_service";

service AuthService {
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse);
    rpc Login (LoginRequest) returns (LoginResponse);
    rpc ValidateToken (ValidateTokenRequest) returns (ValidateTokenResponse);
    rpc Logout (LogoutRequest) returns (LogoutResponse);
    rpc SendOTP (SendOTPRequest) returns (SendOTPResponse);
}

// Message for user model
message User {
    string id = 1;
    string email = 2;
    string username = 3;
    string password = 4;
    bool verified = 5;
    string role = 6;
    int64 createdAt = 7; // unix time
    int64 updatedAt = 8; // unit time
}

message RegisterRequest {
    string email = 1;
    string username = 2;
    string password = 3;
}

message RegisterResponse {
    User user = 1;
}

message VerifyEmailRequest {
    string email = 1;
    string otp = 2;        // One-Time Password sent to the user's email
}

message VerifyEmailResponse {
    string message = 1;
}

// Message for login
message LoginRequest {
    string email = 1;
    string password = 2;
}

// Response for login
message LoginResponse {
    string accessToken = 1;    // Access token for the session
    string refreshToken = 2;   // Refresh token for renewing the session
    string message = 3;
}

// Message for token validation
message ValidateTokenRequest {
    string token = 1;      // Token to be validated
}

// Response for token validation
message ValidateTokenResponse {
    bool valid = 1;        // Indicates whether the token is valid
    string userId = 2;
    string role = 3;
    string email = 4;
}

// Message for logout
message LogoutRequest {
    int64 userId = 1;     // User ID initiating the logout
}

// Response for logout
message LogoutResponse {
    string message = 1;    // Success or error message
}

// Message for sending or resending OTP
message SendOTPRequest {
    string email = 1;      // User's email address to receive the OTP
}

// Response for sending OTP
message SendOTPResponse {
    string message = 1;    // Success or error message
}
