services:
    api-gateway:
        build:
            context: ./../api_gateway
        ports:
            - "8080:80"
        depends_on:
            - book-service
            - author-service
            - category-service
            - user-service
            - rabbitmq
        networks:
            - library-network
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            APP_PORT: "80"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            READ_TIMEOUT: 10 # second unit
            WRITE_TIMEOUT: 10 # second unit
            AUTH_SERVICE_URL: "auth-service:50051"
            AUTHOR_SERVICE_URL: "author-service:50051"
            BOOK_SERVICE_URL: "book-service:50051"
            CATEGORY_SERVICE_URL: "category-service:50051"
            LOAN_SERVICE_URL: "loan-service:50051"
            USER_SERVICE_URL: "user-service:50051"
            LOGGER_WORKER_TYPE: "single"
            LOGGER_WORKER_NUM: 5
            LOGGER_WORKER_BUFFER_SIZE: 100

    book-service:
        build:
            context: ./../book_service
        networks:
            - library-network
        depends_on:
            - book-db
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            GRPC_PORT: "50051"
            DSN: "host=book-db port=5432 user=fikri password=12345678 dbname=bookdb sslmode=disable timezone=Asia/Jakarta connect_timeout=5"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            LOGGER_WORKER_TYPE: "single"
            LOGGER_WORKER_NUM: 5
            LOGGER_WORKER_BUFFER_SIZE: 100

    author-service:
        build:
            context: ./../author_service
        networks:
            - library-network
        depends_on:
            - author-db
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            GRPC_PORT: "50051"
            DSN: "host=author-db port=5432 user=fikri password=12345678 dbname=authordb sslmode=disable timezone=Asia/Jakarta connect_timeout=5"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            LOGGER_WORKER_TYPE: "single"
            LOGGER_WORKER_NUM: 5
            LOGGER_WORKER_BUFFER_SIZE: 100

    category-service:
        build:
            context: ./../category_service
        networks:
            - library-network
        depends_on:
            - category-db
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            GRPC_PORT: "50051"
            DSN: "host=category-db port=5432 user=fikri password=12345678 dbname=categorydb sslmode=disable timezone=Asia/Jakarta connect_timeout=5"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            LOGGER_WORKER_TYPE: "single"
            LOGGER_WORKER_NUM: 5
            LOGGER_WORKER_BUFFER_SIZE: 100

    user-service:
        build:
            context: ./../user_service
        networks:
            - library-network
        depends_on:
            - user-db
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            GRPC_PORT: "50051"
            DSN: "host=user-db port=5432 user=fikri password=12345678 dbname=userdb sslmode=disable timezone=Asia/Jakarta connect_timeout=5"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            LOGGER_WORKER_TYPE: "single"
            LOGGER_WORKER_NUM: 5
            LOGGER_WORKER_BUFFER_SIZE: 100

    auth-service:
        build:
            context: ./../auth_service
        networks:
            - library-network
        depends_on:
            - user-db
            - rabbitmq
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            GRPC_PORT: "50051"
            DSN: "host=user-db port=5432 user=fikri password=12345678 dbname=userdb sslmode=disable timezone=Asia/Jakarta connect_timeout=5"
            REDIS_HOST: "redis"
            REDIS_PASSWORD: "mypasswordtralala"
            REDIS_DEFAULT_EXP: 5 # minute unit
            REDIS_DB: 0
            REDIS_PORT: "6379"
            JWT_ISSUER: "auth-service"
            JWT_SECRET: "supersecretkeywjerjrqwowijfoqjfoaqjdoajflakjoewjroewijrwwoijoj"
            JWT_EXP_ACCESS_TOKEN: 15 # minute unit
            JWT_EXP_REFRESH_TOKEN: 38880 # minute unit (7 days)
            EMAIL_SENDER_CONTAINER_FILE: "/run/secrets/email_sender"
            EMAIL_PASSWORD_CONTAINER_FILE: "/run/secrets/email_password"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            LOGGER_WORKER_TYPE: "single"
            LOGGER_WORKER_NUM: 5
            LOGGER_WORKER_BUFFER_SIZE: 100
        secrets:
            - email_sender
            - email_password

    mailer-service:
        build:
            context: ./../mailer_service
        networks:
            - library-network
        depends_on:
            - rabbitmq
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            EMAIL_SENDER_CONTAINER_FILE: "/run/secrets/email_sender"
            EMAIL_PASSWORD_CONTAINER_FILE: "/run/secrets/email_password"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            LOGGER_WORKER_TYPE: "single"
            LOGGER_WORKER_NUM: 5
            LOGGER_WORKER_BUFFER_SIZE: 100
        secrets:
            - email_sender
            - email_password

    loan-service:
        build:
            context: ./../loan_service
        networks:
            - library-network
        depends_on:
            - loan-db
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            GRPC_PORT: "50051"
            DSN: "host=loan-db port=5432 user=fikri password=12345678 dbname=loandb sslmode=disable timezone=Asia/Jakarta connect_timeout=5"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            LOGGER_WORKER_TYPE: "single"
            LOGGER_WORKER_NUM: 5
            LOGGER_WORKER_BUFFER_SIZE: 100

    logger-service:
        build:
            context: ./../logger_service
        networks:
            - library-network
        depends_on:
            - mongo
            - rabbitmq
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            LOG_PATH: "/app/logs/history.log"
            RABBITMQ_URL: "amqp://user:password@rabbitmq:5672"
            MONGO_URL: "mongodb://admin:password@mongo:27017"
            MONGO_DB: "logs"
            MONGO_COLLECTION: "logs"
        volumes:
            - ./../logger_service/logs:/app/logs

    book-db:
        image: postgres:15
        ports:
            - "5433:5432"
        environment:
            POSTGRES_USER: fikri
            POSTGRES_PASSWORD: 12345678
            POSTGRES_DB: bookdb
            TZ: Asia/Jakarta

        networks:
            - library-network
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        volumes:
            - book-db-data:/var/lib/postgresql/data
            - ./sql/book-init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./sql/book-seeder.sql:/docker-entrypoint-initdb.d/seeder.sql

    author-db:
        image: postgres:15
        ports:
            - "5434:5432"
        environment:
            POSTGRES_USER: fikri
            POSTGRES_PASSWORD: 12345678
            POSTGRES_DB: authordb
            TZ: Asia/Jakarta

        networks:
            - library-network
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        volumes:
            - author-db-data:/var/lib/postgresql/data
            - ./sql/author-init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./sql/author-seeder.sql:/docker-entrypoint-initdb.d/seeder.sql

    category-db:
        image: postgres:15
        ports:
            - "5435:5432"
        environment:
            POSTGRES_USER: fikri
            POSTGRES_PASSWORD: 12345678
            POSTGRES_DB: categorydb
            TZ: Asia/Jakarta

        networks:
            - library-network
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        volumes:
            - category-db-data:/var/lib/postgresql/data
            - ./sql/category-init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./sql/category-seeder.sql:/docker-entrypoint-initdb.d/seeder.sql

    user-db:
        image: postgres:15
        ports:
            - "5436:5432"
        environment:
            POSTGRES_USER: fikri
            POSTGRES_PASSWORD: 12345678
            POSTGRES_DB: userdb
            TZ: Asia/Jakarta

        networks:
            - library-network
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        volumes:
            - user-db-data:/var/lib/postgresql/data
            - ./sql/user-init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./sql/user-seeder.sql:/docker-entrypoint-initdb.d/seeder.sql

    loan-db:
        image: postgres:15
        ports:
            - "5437:5432"
        environment:
            POSTGRES_USER: fikri
            POSTGRES_PASSWORD: 12345678
            POSTGRES_DB: loandb
            TZ: Asia/Jakarta

        networks:
            - library-network
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        volumes:
            - loan-db-data:/var/lib/postgresql/data
            - ./sql/loan-init.sql:/docker-entrypoint-initdb.d/init.sql

    redis:
        image: redis:7.4.1-alpine
        networks:
            - library-network
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        command: ["redis-server", "--requirepass", "mypasswordtralala"]

    rabbitmq:
        image: rabbitmq:3.12-management-alpine
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - library-network
        environment:
            RABBITMQ_DEFAULT_USER: user
            RABBITMQ_DEFAULT_PASS: password
        restart: always
        deploy:
            mode: replicated
            replicas: 1

    mongo:
        image: mongo:4.2.16-bionic
        container_name: mongo
        ports:
            - "27017:27017"
        networks:
            - library-network
        restart: always
        deploy:
            mode: replicated
            replicas: 1
        environment:
            MONGO_INITDB_DATABASE: logs
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: password
        volumes:
            - mongo-data:/data/db

networks:
    library-network:
        driver: bridge

volumes:
    book-db-data:
    author-db-data:
    category-db-data:
    user-db-data:
    loan-db-data:
    mongo-data:

secrets:
    email_sender:
        file: ./secrets/email_sender.secret
    email_password:
        file: ./secrets/email_password.secret
